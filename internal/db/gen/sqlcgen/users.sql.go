// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package mydb

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (username, password_hash, email) VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	Username     string `json:"username"`
	PasswordHash string `json:"password_hash"`
	Email        string `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.Username, arg.PasswordHash, arg.Email)
	return err
}

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT username, password_hash FROM users WHERE username = $1
`

type GetUserByUsernameRow struct {
	Username     string `json:"username"`
	PasswordHash string `json:"password_hash"`
}

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (GetUserByUsernameRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByUsername, username)
	var i GetUserByUsernameRow
	err := row.Scan(&i.Username, &i.PasswordHash)
	return i, err
}
